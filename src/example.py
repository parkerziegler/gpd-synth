import geopandas as gpd
import os
from grammar import SJoin

from synth_input import GdfBindings
from synthesize import bivariate, lazy_synth, lazy_synthesize, synthesize

# Load our powerplants geodataframe.
ca_power_plants = gpd.read_file(
    os.path.abspath("examples/sjoin/data/ca-powerplants.geojson")
)

# Restrict our input to the synthesizer to a subset of each table.
# In this example, we just take the first 100 powerplants.
input_ca_power_plants = ca_power_plants.head(100)

# Our target output would match the output generated by actually running the target program.
target = input_ca_power_plants.dissolve(by="County")


input_gdfs = GdfBindings({
    "ca_power_plants": input_ca_power_plants,
})

def benchmark(src: str):
    from cProfile import Profile
    from io import StringIO
    from contextlib import redirect_stdout

    print('benchmarking: ')
    print('\t', src)

    pr = Profile()
    pr.enable()
    # sort by total time executing in a function's body (not including sub-calls)
    pr.run(src)
    pr.disable()
    
    # don't allow benchmarking to dump in stdio
    f = StringIO()
    with redirect_stdout(f):
        pr.print_stats(sort='tottime')
    
    # truncate stdout to a dozen lines
    print('\n'.join(f.getvalue().splitlines()[:12]))


# test code:
#   synthesize(input_gdfs, target)
# completed in:
#   without dataclass optimization: ~9.1 secs
#   with    dataclass optimization: ~8.9 secs
#   with    dataclass and no print: ~8.8 secs
# benchmark('synthesize(input_gdfs, target)')

# test code:
#   lazy_synthesize(input_gdfs, target)
# completed in:
#   without dataclass optimization: ~0.36 secs
#   with    dataclass optimization: ~0.35 secs
benchmark('lazy_synthesize(input_gdfs, target)')


ca_counties = gpd.read_file(
    os.path.abspath("examples/sjoin/data/ca-counties.geojson")
)

target = gpd.sjoin(ca_counties, ca_power_plants, how="left", predicate="within")

input_gdfs = GdfBindings({
    'ca_counties': ca_counties,
    'ca_power_plants': ca_power_plants,
})

benchmark('lazy_synthesize(bindings, target)')
